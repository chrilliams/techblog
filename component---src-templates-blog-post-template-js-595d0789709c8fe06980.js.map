{"version":3,"sources":["webpack:///./src/templates/blogPostTemplate.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["data","pageContext","mdx","frontmatter","body","previous","next","title","date","to","fields","slug","query","Header","siteTitle","siteDescription","AppStyles","styled","main","Layout","children","site","siteMetadata","description","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","loader","enqueue","React","createContext","useMDXComponents","useMDXScope","scope","components","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","m","exports","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"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","file":"component---src-templates-blog-post-template-js-595d0789709c8fe06980.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\nimport { Layout } from '../components/Layout';\n\nexport default ({ data, pageContext }) => {\n  const { frontmatter, body } = data.mdx;\n  const { previous, next } = pageContext;\n  return (\n    <Layout>\n      <h1>{frontmatter.title}</h1>\n      <p>{frontmatter.date}</p>\n      <MDXRenderer>{body}</MDXRenderer>\n      {previous === false ? null : (\n        <>\n          {previous && (\n            <Link to={previous.fields.slug}>\n              <p>{previous.frontmatter.title}</p>\n            </Link>\n          )}\n        </>\n      )}\n      {next === false ? null : (\n        <>\n          {next && (\n            <Link to={next.fields.slug}>\n              <p>{next.frontmatter.title}</p>\n            </Link>\n          )}\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostsBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        date(formatString: \"YYYY MMMM Do\")\n      }\n    }\n  }\n`;","import { Link } from 'gatsby';\nimport React from 'react';\n\nexport const Header = ({ siteTitle, siteDescription }) => (\n  <Link to=\"/\">\n    <h1>{siteTitle}</h1>\n    <p>{siteDescription}</p>\n  </Link>\n);","import React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\nimport { Header } from './Header';\n\nconst AppStyles = styled.main`\n  width: 800px;\n  margin: 0 auto;\n`;\n\nexport const Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n  return (\n    <AppStyles>\n      <Header siteTitle={title} siteDescription={description} />\n      {children}\n    </AppStyles>\n  );\n};","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  );\n  return site.siteMetadata;\n};","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}