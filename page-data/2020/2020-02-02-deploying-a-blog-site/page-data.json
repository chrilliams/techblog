{"componentChunkName":"component---src-templates-blog-post-template-js","path":"/2020/2020-02-02-deploying-a-blog-site/","result":{"data":{"mdx":{"id":"28b5290a-5293-50af-b5c2-a91e6ffe17a3","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deploying a tech blog site\",\n  \"date\": \"2020-02-02T00:00:00.000Z\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are many way to host a static page live, and I have tried a number in the past. There are great services\\nlike Netlify, a S3 bucket, or AWS Amplify. I wanted something that cause be quickly deployed from a github repo and\\nghpages had be mentioned for blog sites, plus its completely free.\"), mdx(\"h3\", null, \"Github Pages\"), mdx(\"p\", null, \"GitHub Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub,\\noptionally runs the files through a build process, and publishes a website.\"), mdx(\"p\", null, \"You can host your site on GitHub's github.io domain or your own custom domain.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"if you haven't already, create a github project and push your code\")), mdx(\"h4\", null, \"Configuring the GitHub Pages source branch\"), mdx(\"p\", null, \"You must select which branch will be deployed from your repository settings in GitHub for GitHub Pages to function. On GitHub:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Navigate to your site\\u2019s repository.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Under the repository name, click Settings.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the GitHub Pages section, use the Source drop-down to select master (for publishing to the root subdomain) or gh-pages (for publishing to a path like /docs) as your GitHub Pages publishing source.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click Save.\")), mdx(\"h4\", null, \"Installing the gh-pages package\"), mdx(\"p\", null, \"The easiest way to push a Gatsby app to GitHub Pages is by using a package called gh-pages.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install gh-pages --save-dev\\n\")), mdx(\"p\", null, \"Then add a deploy script to package.json in your repository\\u2019s codebase:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"deploy\\\": \\\"gatsby build --prefix-paths && gh-pages -d public\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"Assuming that github was expecting the generated 'public' folder in source control. I was wrong.\"), mdx(\"p\", null, \"Running\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"  npm run deploy\\n\")), mdx(\"p\", null, \"created another branch called 'gh-pages' and updated the Github Pages source branch in the settings mentioned above.\"), mdx(\"p\", null, \"It great that the deploy just works; the build happens on the laptop and the public folder is uploaded to the gh-pages branch.\\nThe site is running at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://chrilliams.github.io/techblog/\"\n  }), \"https://chrilliams.github.io/techblog/\")), mdx(\"p\", null, \"If this doesn't work, deployment information is available via environments in the github repo.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Deploying a tech blog site","date":"2020 February 2nd"}}},"pageContext":{"slug":"/2020/2020-02-02-deploying-a-blog-site/","previous":{"fields":{"slug":"/2020/2020-02-01-starting-a-blog/"},"frontmatter":{"title":"Tech blog site"}},"next":{"fields":{"slug":"/2020/2020-02-04-custom-resources/"},"frontmatter":{"title":"Cloudformation custom resources taking hours to timeout"}}}}}